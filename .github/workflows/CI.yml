name: CI

on:
  push:
    branches: [ "main", "latest" ]
  pull_request:
    branches: [ "main", "latest" ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: netrve/charamanager

jobs:
  Build_Linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Enable Corepack before setting up Node
        run: corepack enable

      - name: Setup node env
        uses: actions/setup-node@v4
        with:
          node-version: lts/Iron
          check-latest: true

      - name: Install dependencies
        run: yarn --frozen-lockfile --silent

      - name: Run prepare
        run: yarn prepare

      - name: Run linter
        run: yarn lint

      - name: Run build
        run: yarn build

      - uses: actions/upload-artifact@v4
        with:
          name: build-linux
          path: .output

  Build_Windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Enable Corepack before setting up Node
        run: corepack enable

      - name: Setup node env
        uses: actions/setup-node@v4
        with:
          node-version: lts/Iron
          check-latest: true

      - name: Enable Corepack before setting up Node
        run: corepack enable

      - name: Install dependencies
        run: yarn --frozen-lockfile --silent

      - name: Run prepare
        run: yarn prepare

      - name: Run linter
        run: yarn lint

      - name: Run build
        run: yarn build

      - uses: actions/upload-artifact@v4
        with:
          name: build-windows
          path: .output

  Build_Mac:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Enable Corepack before setting up Node
        run: corepack enable

      - name: Setup node env
        uses: actions/setup-node@v4
        with:
          node-version: lts/Iron
          check-latest: true

      - name: Enable Corepack before setting up Node
        run: corepack enable

      - name: Install dependencies
        run: yarn --frozen-lockfile --silent

      - name: Run prepare
        run: yarn prepare

      - name: Run linter
        run: yarn lint

      - name: Run build
        run: yarn build

      - uses: actions/upload-artifact@v4
        with:
          name: build-macos
          path: .output


  Build_Docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}